{"version":3,"file":"static/js/620.c6ecb2a0.chunk.js","mappings":"sQACA,EAA4B,8BAA5B,EAAkE,0BAAlE,EAAkG,wB,SC8ClG,EA1CoB,WAClB,OAAwCA,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAOF,EAAaG,IAAI,SAC9B,GAA0BC,EAAAA,EAAAA,UAAQ,OAACF,QAAD,IAACA,EAAAA,EAAQ,IAA3C,eAAOG,EAAP,KAAcC,EAAd,KAeA,OACE,+BACE,mBAAQC,UAAWC,EAAnB,UACE,kBAAMD,UAAU,OAAOE,SAZP,SAAAC,GAGpB,GAFAA,EAAGC,iBAEW,KAAVN,EACF,OAAOO,EAAAA,EAAAA,IAAM,sGAEfX,GAAgB,SAAAY,GAAK,yBAAUA,GAAV,IAAiBC,MAAOT,GAAxB,GACtB,EAKK,WACE,mBAAQU,KAAK,SAASR,UAAWC,EAAjC,UACE,iBAAMD,UAAU,eAAhB,uBAGF,kBACEA,UAAWC,EACXO,KAAK,OAGLb,KAAK,OACLG,MAAOA,EACPW,YAAY,gBACZC,SA7BgB,SAAAC,GACxBZ,EAASY,EAAMC,OAAOd,MAAMe,OAC7B,UAiCF,E,uCC5CD,EAAsH,sBAAtH,EAA+K,qBAA/K,EAA2M,qBAA3M,EAAwO,sBAAxO,EAAwQ,wBCkExQ,EA3De,WACb,OAAuBrB,EAAAA,EAAAA,IAAgB,IACjCe,GADN,eAC2BX,IAAI,SACzBkB,GAAWC,EAAAA,EAAAA,MAEjB,GAAsClB,EAAAA,EAAAA,UAAS,IAA/C,eAAOmB,EAAP,KAAoBC,EAApB,KACA,GAA4BpB,EAAAA,EAAAA,WAAS,GAArC,eAAOqB,EAAP,KAAeC,EAAf,KAEMC,GAAaC,EAAAA,EAAAA,cAAW,iBAAC,oGAE3BF,GAAU,GAFiB,SAGJG,IAAAA,IAAA,6IACiHf,IAJ7G,OAGrBgB,EAHqB,OAM3BN,EAAeM,EAASC,KAAKC,SANF,gDAQ3BpB,EAAAA,GAAAA,MAAY,qGARe,yBAU3Bc,GAAU,GAViB,4EAY5B,CAACZ,IAWJ,OAPAmB,EAAAA,EAAAA,YAAU,WACHnB,GAGLa,GACD,GAAE,CAACb,EAAOa,KAGT,iCACE,SAAC,EAAD,IACCF,IAAU,SAACS,EAAA,EAAD,KAET,eAAI3B,UAAW4B,EAAf,SACGZ,EAAYa,KAAI,SAAAC,GAAI,OACnB,UAAC,KAAD,CAAO9B,UAAW4B,EAAsBG,GAAE,kBAAaD,EAAKE,IAAM1B,MAAO,CAAC2B,KAAMnB,GAAhF,WACE,gBAAKd,UAAW4B,EAAhB,UACE,gBACE5B,UAAW4B,EACXM,IAAG,yCAAoCJ,EAAKK,aAC5CC,MAAM,MACNC,IAAKP,EAAKQ,WAGd,eAAGtC,UAAW4B,EAAd,oBACUE,EAAKS,gBAAkBT,EAAKU,mBAVTV,EAAKE,GADjB,QAoB9B,C","sources":["webpack://react-homework-template/./src/components/FilmsSearch/FilmSearch.module.css?4547","components/FilmsSearch/FilmsSearch.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"FilmSearch_searchbar__3hHPg\",\"input\":\"FilmSearch_input__5tn1R\",\"btn\":\"FilmSearch_btn__W7r11\"};","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport style from './FilmSearch.module.css';\n\nconst FilmsSearch = () => {\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const name = searchParams.get('query');\n  const [value, setValue] = useState(name ?? '');\n\n  const handleChangeValue = event => {\n    setValue(event.target.value.trim());\n  };\n\n  const onSubmitValue = ev => {\n    ev.preventDefault();\n\n    if (value === '') {\n      return toast('Ведите свой запрос');\n    }\n    setSearchParams(state => ({ ...state, query: value }));\n  };\n\n  return (\n    <>\n      <header className={style.searchbar}>\n        <form className=\"form\" onSubmit={onSubmitValue}>\n          <button type=\"submit\" className={style.btn}>\n            <span className=\"button-label\">Search</span>\n          </button>\n\n          <input\n            className={style.input}\n            type=\"text\"\n            // autoComplete=\"off\"\n            // autoFocus=\"off\"\n            name=\"name\"\n            value={value}\n            placeholder=\"Search movies\"\n            onChange={handleChangeValue}\n          />\n        </form>\n      </header>\n    </>\n  );\n};\n\nexport default FilmsSearch;\n","// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"Movies_searchbar__IBimh\",\"input\":\"Movies_input__KrUqs\",\"btn\":\"Movies_btn__TlfBQ\",\"title\":\"Movies_title__MDLXB\",\"text\":\"Movies_text__FlKVm\",\"list\":\"Movies_list__hqYjd\",\"link\":\"Movies_link__MzAfU\",\"image\":\"Movies_image__vvLaG\",\"wrapper\":\"Movies_wrapper__RVmCE\"};","import FilmsSearch from '../../components/FilmsSearch/FilmsSearch';\nimport { useState, useCallback, useEffect } from 'react';\nimport Loader from 'components/Loader';\nimport axios from 'axios';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport s from './Movies.module.css';\n\nconst Movies = () => {\n  const [searchParams] = useSearchParams('');\n  const query = searchParams.get('query');\n  const location = useLocation()\n\n  const [searchFilms, setSearchFilms] = useState([]);\n  const [loader, setLoader] = useState(false);\n\n  const serviceApi = useCallback(async () => {\n    try {\n      setLoader(true);\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/search/movie?api_key=53f28f10fb3650af7c7f4f04a387344f&language=en-US&page=1&include_adult=false&query=${query}`\n      );\n      setSearchFilms(response.data.results);\n    } catch (error) {\n      toast.error('Что то пошло не так :(');\n    } finally {\n      setLoader(false);\n    }\n  }, [query]);\n\n\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    serviceApi();\n  }, [query, serviceApi]);\n\n  return (\n    <>\n      <FilmsSearch />\n      {loader && <Loader />}\n      {\n        <ul className={s.list}>\n          {searchFilms.map(film => (\n            <Link  className={s.link} key={film.id} to={`/movies/${film.id}`} state={{from: location}}>\n              <div className={s.wrapper}>\n                <img\n                  className={s.image}\n                  src={`https://image.tmdb.org/t/p/w500${film.poster_path}`}\n                  width=\"225\"\n                  alt={film.title}\n                />\n              </div>\n              <p className={s.title}>\n                Title: {film.original_title || film.original_name}\n              </p>\n            </Link>\n          ))}\n        </ul>\n\n      }\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["useSearchParams","searchParams","setSearchParams","name","get","useState","value","setValue","className","style","onSubmit","ev","preventDefault","toast","state","query","type","placeholder","onChange","event","target","trim","location","useLocation","searchFilms","setSearchFilms","loader","setLoader","serviceApi","useCallback","axios","response","data","results","useEffect","Loader","s","map","film","to","id","from","src","poster_path","width","alt","title","original_title","original_name"],"sourceRoot":""}